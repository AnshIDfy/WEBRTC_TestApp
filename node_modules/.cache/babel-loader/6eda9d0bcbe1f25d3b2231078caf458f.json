{"ast":null,"code":"var _jsxFileName = \"/home/terbo/janusroom/src/components/Create.tsx\",\n    _s = $RefreshSig$();\n\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Janus from \"./Janus\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar server = null; // if (window.location.protocol === \"http:\")\n// else server = \"https://\" + window.location.hostname + \":8089/janus\";\n\nserver = \"ws://\" + window.location.hostname + \":8188/janus\";\nvar janus = null;\nvar sfutest = null;\nvar opaqueId = \"videoroomtest-\" + Janus.randomString(12);\nvar myusername = null;\nvar myid = null;\nvar mystream = null;\nvar mypvtid = null;\nvar feeds = [];\nvar bitrateTimer = [];\nvar subscriber_mode = false;\nexport const Create = () => {\n  _s();\n\n  var myDate = new Date(1643009551493694 * 1000);\n\n  const handleSelect = e => {\n    bitRate(e);\n  }; //  const [sfuTestObject, setsfuTestObject]: any = useState<any[]>([]);\n  // console.log(sfuTestObject);\n\n\n  const [name, setName] = useState(\"\");\n\n  const onChangeName = event => {\n    return setName(event.currentTarget.value);\n  }; // const remoteFeedData : any[]   = [];\n  // const [remoteFeedData, setremoteFeedData] = useState<any[]>([]);\n\n\n  const pushedData = [];\n  const [remoteFeedPushedData, setremoteFeedPushedData] = useState([]);\n  const [roomID, setRoomID] = useState();\n  var myroom = roomID; // Demo room\n\n  const [showColMd, setShowColMd] = useState(false);\n  const [joinDiv, setjoinDiv] = useState(true);\n\n  const onChangeRoomID = event => {\n    return setRoomID(parseInt(event.target.value));\n  };\n\n  const subscriberMode = () => {\n    subscriber_mode = true;\n    start();\n  };\n\n  const iD = async () => {\n    // try {\n    const session = await axios.post(\"http://127.0.0.1:8088/janus\", {\n      janus: \"create\",\n      transaction: \"session\"\n    });\n    const sessionID = session.data.data.id;\n    const handle = await axios.post(`http://127.0.0.1:8088/janus/${sessionID}`, {\n      janus: \"attach\",\n      plugin: \"janus.plugin.videoroom\",\n      transaction: \"pluginAttach\"\n    });\n    const handleID = handle.data.data.id;\n    const roomCreate = await axios.post(`http://127.0.0.1:8088/janus/${sessionID}/${handleID}`, {\n      janus: \"message\",\n      transaction: \"roomCreate\",\n      body: {\n        request: \"create\",\n        room: roomID,\n        permanent: true,\n        description: \"Videoroom Application Room\",\n        publishers: 8,\n        rec_dir: \"/tmp\"\n      }\n    });\n    const config = await axios.post(`http://127.0.0.1:8088/janus/${sessionID}/${handleID}`, {\n      janus: \"message\",\n      transacion: \"config\",\n      body: {\n        request: \"c\"\n      }\n    });\n    console.log(roomCreate);\n\n    if (roomCreate.data.plugindata.data.error === `Room ${roomID} already exists`) {\n      alert(\"Room Already Exists, Try Joining This Room instead\");\n    } else {\n      alert(`Your Room is Created | Room Number : ${roomCreate.data.plugindata.data.room}`);\n      myroom = roomCreate.data.plugindata.data.room;\n    }\n\n    setInterval(async () => {\n      const keepAlive = await axios.post(`http://127.0.0.1:8088/janus/${sessionID}/${handleID}`, {\n        janus: \"keepalive\",\n        session_id: sessionID,\n        transaction: \"keepingalive\"\n      });\n    }, 50000);\n    await textRoomCreate();\n  }; //   if($(this).text() === 'Pause') {\n  //   recordplay.send({message: {request: 'pause'}});\n  //   $(this).text('Resume');\n  //   }else {\n  //   recordplay.send({message: {request: 'resume'}});\n  //   $(this).text('Pause');\n\n\n  const playrec = () => {\n    sfutest.send({\n      message: {\n        request: \"configure\",\n        record: true\n      }\n    });\n  };\n\n  const pauserec = () => {\n    sfutest.send({\n      message: {\n        request: \"configure\",\n        record: false\n      }\n    });\n  };\n\n  const textRoomCreate = async () => {\n    // try {\n    const session = await axios.post(\"http://127.0.0.1:8088/janus\", {\n      janus: \"create\",\n      transaction: \"session\"\n    });\n    const sessionID = session.data.data.id;\n    console.log(sessionID);\n    const handle = await axios.post(`http://127.0.0.1:8088/janus/${sessionID}`, {\n      janus: \"attach\",\n      plugin: \"janus.plugin.textroom\",\n      transaction: \"pluginAttach\"\n    });\n    const handleID = handle.data.data.id;\n    console.log(handleID);\n    const roomCreate = await axios.post(`http://127.0.0.1:8088/janus/${sessionID}/${handleID}`, {\n      janus: \"message\",\n      transaction: \"roomCreate\",\n      body: {\n        request: \"create\",\n        room: roomID,\n        history: 100,\n        permanent: true,\n        description: \"Textroom Application Room\",\n        secret: \"ansh\"\n      }\n    });\n    console.log(roomCreate);\n    setInterval(async () => {\n      const keepAlive = await axios.post(`http://127.0.0.1:8088/janus/${sessionID}/${handleID}`, {\n        janus: \"keepalive\",\n        session_id: sessionID,\n        transaction: \"keepingalive\"\n      });\n    }, 50000);\n  };\n\n  const bitRate = e => {\n    var id = parseInt(e);\n    console.log(id);\n    var bitrate = parseInt(id) * 1000;\n    console.log(bitrate);\n\n    if (bitrate === 0) {\n      console.log(\"Not limiting bandwidth via REMB\");\n    } else {\n      console.log(\"Capping bandwidth to \" + bitrate + \" via REMB\");\n    }\n\n    sfutest.send({\n      message: {\n        request: \"configure\",\n        bitrate: bitrate\n      }\n    });\n    return false;\n  };\n\n  const start = () => {\n    setShowColMd(true);\n    setjoinDiv(false);\n    Janus.init({\n      debug: \"all\",\n      callback: function () {\n        // Make sure the browser supports WebRTC\n        // Create session\n        janus = new Janus({\n          server: server,\n          success: function () {\n            // Attach to VideoRoom plugin\n            janus.attach({\n              plugin: \"janus.plugin.videoroom\",\n              opaqueId: opaqueId,\n              success: function (pluginHandle) {\n                sfutest = pluginHandle;\n                console.log(\"Plugin attached! (\" + sfutest.getPlugin() + \", id=\" + sfutest.getId() + \")\");\n                console.log(sfutest.session.getSessionId());\n                console.log(\"  -- This is a publisher/m a n a g e r \");\n                myusername = name;\n                const register = {\n                  request: \"join\",\n                  room: myroom,\n                  ptype: \"publisher\",\n                  display: name,\n                  record: false\n                };\n                console.log(myusername);\n                sfutest.send({\n                  message: register\n                });\n              },\n              error: function (error) {\n                console.error(\"  -- Error attaching plugin...\", error);\n              },\n              consentDialog: function (on) {\n                console.debug(\"Consent dialog should be \" + (on ? \"on\" : \"off\") + \" now\");\n              },\n              mediaState: function (medium, on) {\n                console.log(\"Janus \" + (on ? \"started\" : \"stopped\") + \" receiving our \" + medium);\n              },\n              webrtcState: function (on) {\n                console.log(\"Janus says our WebRTC PeerConnection is \" + (on ? \"up\" : \"down\") + \" now\");\n                if (!on) return; // setsfuTestObject(sfutest);\n              },\n              onmessage: function (msg, jsep) {\n                console.debug(\" ::: Got a message (publisher) :::\");\n                let event = msg[\"videoroom\"];\n                console.log(msg);\n                console.debug(\"Event: \" + event);\n\n                if (event != undefined && event != null) {\n                  if (event === \"joined\") {\n                    // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n                    myid = msg[\"id\"];\n                    mypvtid = msg[\"private_id\"];\n                    console.log(\"Successfully joined room \" + msg[\"room\"] + \" with ID \" + myid);\n\n                    if (subscriber_mode) {\n                      var _element$parentNode;\n\n                      const element = document.getElementById(\"hideDiv\");\n                      element === null || element === void 0 ? void 0 : (_element$parentNode = element.parentNode) === null || _element$parentNode === void 0 ? void 0 : _element$parentNode.removeChild(element); // $(\"#videos\").removeClass(\"hide\").show();\n                    } else {\n                      publishOwnFeed(true);\n                    }\n\n                    if (msg[\"publishers\"] !== undefined && msg[\"publishers\"] !== null) {\n                      let list = msg[\"publishers\"];\n                      console.log(\"Got a list of available publishers/feeds:\");\n                      console.log(list);\n\n                      for (let f in list) {\n                        let id = list[f][\"id\"];\n                        let display = list[f][\"display\"];\n                        let audio = list[f][\"audio_codec\"];\n                        let video = list[f][\"video_codec\"];\n                        console.log(\"  >> [\" + id + \"] \" + display + \" (audio: \" + audio + \", video: \" + video + \")\");\n                        newRemoteFeed(id, display, audio, video);\n                      }\n                    }\n                  } else if (event === \"destroyed\") {\n                    // The room has been destroyed\n                    console.warn(\"The room has been destroyed!\");\n                    console.error(\"The room has been destroyed\");\n                  } else if (event === \"event\") {\n                    // Any new feed to attach to?\n                    if (msg[\"publishers\"] !== undefined && msg[\"publishers\"] !== null) {\n                      console.log(\"new publishers!\");\n                      let list = msg[\"publishers\"];\n                      console.log(msg);\n\n                      for (let f in list) {\n                        let id = list[f][\"id\"];\n                        let display = list[f][\"display\"];\n                        let audio = list[f][\"audio_codec\"];\n                        let video = list[f][\"video_codec\"];\n                        console.log(\"  >> [\" + id + \"] \" + display + \" (audio: \" + audio + \", video: \" + video + \")\");\n                        newRemoteFeed(id, display, audio, video);\n                      }\n                    } else if (msg[\"leaving\"] !== undefined && msg[\"leaving\"] !== null) {// One of the publishers has gone away?\n                    } else if (msg[\"unpublished\"] !== undefined && msg[\"unpublished\"] !== null) {\n                      // One of the publishers has unpublished?\n                      if (msg[\"unpublished\"] === \"ok\") {\n                        sfutest.hangup();\n                        return;\n                      }\n                    } else if (msg[\"error\"] !== undefined && msg[\"error\"] !== null) {\n                      if (msg[\"error_code\"] === 426) {// This is a \"no such room\" error: give a more meaningful description\n                      } else {\n                        console.log(\"No Such Room\");\n                      }\n                    }\n                  }\n                }\n\n                if (jsep !== undefined && jsep !== null) {\n                  console.debug(\"Got room event. Handling SDP as well...\");\n                  console.debug(jsep);\n                  sfutest.handleRemoteJsep({\n                    jsep: jsep\n                  }); // Check if any of the media we wanted to publish has\n                  // been rejected (e.g., wrong or unsupported codec)\n\n                  let audio = msg[\"audio_codec\"];\n\n                  if (mystream && mystream.getAudioTracks() && mystream.getAudioTracks().length > 0 && !audio) {\n                    // Audio has been rejected\n                    alert(\"Our audio stream has been rejected, viewers won't hear us\");\n                  }\n\n                  let video = msg[\"video_codec\"];\n\n                  if (mystream && mystream.getVideoTracks() && mystream.getVideoTracks().length > 0 && !video) {\n                    // Video has been rejected\n                    console.log(\"Our video stream has been rejected, viewers won't see us\");\n                  }\n                }\n              },\n              onlocalstream: function (stream) {\n                console.log(\" ::: Got a local stream :::\", stream);\n                mystream = stream; // $(\"#videos\").removeClass(\"hide\").show();\n\n                const videoTag = document.createElement(\"video\");\n                videoTag.className = \"rounded centered\";\n                videoTag.id = \"myvideo\";\n                videoTag.height = 330;\n                videoTag.width = 270;\n                videoTag.autoplay = true;\n                videoTag.playsInline = true;\n                videoTag.style.borderRadius = \"5px\";\n                videoTag.muted = true;\n                const muteBtn = document.createElement(\"button\");\n                muteBtn.className = \"btn btn-warning btn-xs\";\n                muteBtn.id = \"mute\";\n                muteBtn.textContent = \"Mute\";\n                muteBtn.style.position = \"relative\";\n                muteBtn.style.right = \"10px\";\n                const unpublishBtn = document.createElement(\"button\");\n                unpublishBtn.className = \"btn btn-warning btn-xs\";\n                unpublishBtn.id = \"unpublish\";\n                unpublishBtn.textContent = \"Unpublish\";\n                unpublishBtn.style.position = \"relative\";\n                unpublishBtn.style.left = \"100px\"; // if ($(\"#myvideo\").length === 0) {\n                //   //\n\n                var videolocal = document.getElementById(\"videolocal\");\n                videolocal.appendChild(videoTag);\n                videolocal.appendChild(muteBtn);\n                videolocal.appendChild(unpublishBtn);\n                var muteToggle = document.getElementById(\"mute\");\n                muteToggle === null || muteToggle === void 0 ? void 0 : muteToggle.addEventListener(\"click\", toggleMute);\n                var unpublishHandle = document.getElementById(\"unpublish\");\n                unpublishHandle === null || unpublishHandle === void 0 ? void 0 : unpublishHandle.addEventListener(\"click\", unpublishOwnFeed); // }\n                // $(\"#publisher\").removeClass(\"hide\").html(myusername).show();\n\n                Janus.attachMediaStream(videoTag, stream);\n                if (sfutest.webrtcStuff.pc.iceConnectionState !== \"completed\" && sfutest.webrtcStuff.pc.iceConnectionState !== \"connected\") var videoTracks = stream.getVideoTracks();\n              },\n              onremotestream: function (stream) {// The publisher stream is sendonly, we don't expect anything here\n              },\n              oncleanup: function () {\n                console.log(\" ::: Got a cleanup notification: we are unpublished now :::\");\n                mystream = null;\n\n                function createButton() {\n                  var div = document.getElementById(\"videolocal\");\n                  div.innerHTML = '<button id=\"publish\" class=\"btn btn-primary\">Publish</button>';\n                }\n\n                createButton();\n\n                const hide = () => {\n                  const publishBtn = document.getElementById(\"publish\");\n                  publishBtn.style.display = \"none\";\n                };\n\n                var element = document.getElementById(\"publish\");\n                var listener = element.addEventListener(\"click\", function () {\n                  publishOwnFeed(true);\n                  hide();\n                });\n              }\n            });\n          },\n          error: function (error) {\n            console.error(error);\n          },\n          destroyed: function () {\n            console.log(\"destroyed\");\n          }\n        });\n      }\n    });\n\n    function publishOwnFeed(useAudio) {\n      // Publish our stream\n      sfutest.createOffer({\n        media: {\n          audioRecv: false,\n          videoRecv: false,\n          audioSend: useAudio,\n          videoSend: true\n        },\n        // Publishers are sendonly\n        success: function (jsep) {\n          console.debug(\"Got publisher SDP!\");\n          console.debug(jsep);\n          const publish = {\n            request: \"configure\",\n            audio: useAudio,\n            video: true,\n            record: false\n          };\n          sfutest.send({\n            message: publish,\n            jsep: jsep\n          });\n        },\n        error: function (error) {\n          console.error(\"WebRTC error:\", error);\n\n          if (useAudio) {\n            publishOwnFeed(false);\n          }\n        }\n      });\n    }\n\n    function newRemoteFeed(id, display, audio, video) {\n      // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n      let remoteFeed = null;\n      console.log(\"hexx\");\n      janus.attach({\n        plugin: \"janus.plugin.videoroom\",\n        opaqueId: opaqueId,\n        success: function (pluginHandle) {\n          remoteFeed = pluginHandle;\n          console.log(pluginHandle.plugin);\n          console.log(\"Plugin attached! (\" + remoteFeed.getPlugin() + \", id=\" + remoteFeed.getId() + \")\");\n          console.log(\"  -- This is a subscriber\"); // We wait for the plugin to send us an offer\n\n          let subscribe = {\n            request: \"join\",\n            room: myroom,\n            ptype: \"subscriber\",\n            feed: id,\n            private_id: mypvtid\n          };\n          remoteFeed.videoCodec = video;\n          remoteFeed.send({\n            message: subscribe\n          });\n          console.log(subscribe);\n        },\n        error: function (error) {\n          console.error(\"  -- Error attaching plugin...\", error);\n        },\n        onmessage: function (msg, jsep) {\n          console.debug(\" ::: Got a message (subscriber) :::\", msg);\n          let event = msg[\"videoroom\"];\n          console.log(msg);\n          console.log(jsep);\n          console.log(\"Event: \" + event);\n\n          if (event) {\n            if (event === \"attached\") {\n              console.log(`subscriber created and attached!`); // Subscriber created and attached\n\n              for (let i = 1; i < 6; i++) {\n                if (!feeds[i]) {\n                  feeds[i] = remoteFeed;\n                  remoteFeed.rfindex = i;\n                  break;\n                }\n              }\n\n              remoteFeed.rfid = msg[\"id\"];\n              remoteFeed.rfdisplay = msg[\"display\"];\n              console.log(`attached`, remoteFeed);\n              console.log(\"Successfully attached to feed \" + remoteFeed.rfid + \" (\" + remoteFeed.rfdisplay + \") in room \" + msg[\"room\"]); // $(\"#remote\" + remoteFeed.rfindex).removeClass(\"hide\").htmlshow();\n            } else if (event === \"recording\") {\n              // Got an ANSWER to our recording OFFER\n              // if(jsep)\n              // recordplay.handleRemoteJsep({ jsep: jsep });\n              // var id = result[\"id\"];\n              // if(id) {\n              //   Janus.log(\"The ID of the current recording is \" + id);\n              //   // recordingId = id;\n              // }\n              console.log(\"record\");\n            }\n          }\n\n          if (jsep) {\n            console.debug(\"Handling SDP as well...\", jsep); // Answer and attach\n\n            remoteFeed.createAnswer({\n              jsep: jsep,\n              media: {\n                audioSend: false,\n                videoSend: false\n              },\n              // We want recvonly audio/video\n              success: function (jsep) {\n                console.log(\"Got SDP!\", jsep);\n                let body = {\n                  request: \"start\",\n                  room: myroom\n                };\n                remoteFeed.send({\n                  message: body,\n                  jsep: jsep\n                });\n              },\n              error: function (error) {\n                console.error(\"WebRTC error:\", error);\n              }\n            });\n          }\n        },\n        iceState: function (state) {\n          console.log(\"ICE state of this WebRTC PeerConnection (feed #\" + remoteFeed.rfindex + \") changed to \" + state);\n        },\n        webrtcState: function (on) {\n          console.log(\"Janus says this WebRTC PeerConnection (feed #\" + remoteFeed.rfindex + \") is \" + (on ? \"up\" : \"down\") + \" now\");\n        },\n        onlocalstream: function (stream) {// The subscriber stream is recvonly, we don't expect anything here\n        },\n        onremotestream: function (stream) {\n          console.log(remoteFeed); // const a = $(\"#remotevideo\" + remoteFeed.rfindex).length;\n          // var addButtons = false;\n          // if ($(\"#remotevideo\" + remoteFeed.rfindex).length === 0) {\n          //   //   addButtons = true;\n          //   $(\"#videoremote\" + remoteFeed.id).append(\n          //     '<span class=\"label label-primary hide\" id=\"curres' +\n          //       remoteFeed.id +\n          //       '\" style=\"position: absolute; bottom: 0px; left: 0px; margin: 15px;\"></span>' +\n          //       '  <span class=\"label label-info hide\" id=\"curbitrate' +\n          //       remoteFeed.id +\n          //       '\" style=\"position: absolute; bottom: 0px; right: 0px; margin: 15px;\"></span>'\n          //   );\n          //   $(\"#curbitrate\" + remoteFeed.id)\n          //     .removeClass(\"hide\")\n          //     .show();\n          //   bitrateTimer[remoteFeed.id] = setInterval(function () {\n          //     var bitrate = remoteFeed.getBitrate();\n          //     $(\"#curbitrate\" + remoteFeed.id).text(bitrate);\n          //   }, 1000);\n          //   // const indexOfData: any = pushedData.findIndex((remote) => {\n          //   //   return remote.id == remoteFeed.id;\n          //   // });\n          //   // if (indexOfData < 0) {\n          //   //   pushedData.push(remoteFeed);\n          //   //   setremoteFeedPushedData(pushedData);\n          //   // }\n          //   // console.log(typeof remoteFeed);\n          //   // console.log(pushedData);\n          //   // console.log();\n          //   // setremoteFeedData([...remoteFeedData, remoteFeed]);\n          //   // No remote video yet\n          //   // $(\"#videoremote\" + remoteFeed.rfindex).append(\n          //   //   '<video class=\"rounded centered relative hide\" id=\"remotevideo' +\n          //   //     remoteFeed.rfindex +\n          //   //     '\" width=\"100%\" height=\"100%\" autoplay playsinline/>'\n          //   // );\n          // }\n\n          const indexOfData = pushedData.findIndex(remote => {\n            return remote.id == remoteFeed.id;\n          });\n\n          if (indexOfData < 0) {\n            pushedData.push(remoteFeed);\n            setremoteFeedPushedData(pushedData);\n          } // console.log(typeof remoteFeed);\n          // console.log(pushedData);\n          // console.log();\n\n\n          const video = document.getElementById(`remotevideo${remoteFeed.rfindex}`);\n          Janus.attachMediaStream(video, stream);\n          var videoTracks = stream.getVideoTracks(); // $(\"#videoremote\" + remoteFeed.id).append(\n          //   '<span class=\"label label-primary hide\" id=\"curres' +\n          //     remoteFeed.id +\n          //     '\" style=\"position: absolute; bottom: 0px; left: 0px; margin: 15px;\"></span>' +\n          //     '  <span class=\"label label-info hide\" id=\"curbitrate' +\n          //     remoteFeed.id +\n          //     '\" style=\"position: absolute; bottom: 0px; right: 0px; margin: 15px;\"></span>'\n          // );\n          // $(\"#curbitrate\" + remoteFeed.id)\n          //   .removeClass(\"hide\")\n          //   .show();\n          // bitrateTimer[remoteFeed.id] = setInterval(function () {\n          //   var bitrate = remoteFeed.getBitrate();\n          //   $(\"#curbitrate\" + remoteFeed.id).text(bitrate);\n          // }, 1000);\n\n          console.log(remoteFeed);\n          console.log(\"Remote feed #\" + remoteFeed.id + \", stream:\", stream);\n          console.log(remoteFeed.display);\n        },\n        oncleanup: function () {\n          console.log(\" ::: Got a cleanup notification (remote feed \" + id + \") :::\");\n          $(\"#remoteDiv\" + remoteFeed.rfindex).remove();\n        }\n      });\n    }\n\n    function toggleMute() {\n      var muted = sfutest.isAudioMuted();\n      console.log(muted);\n      console.log((muted ? \"Unmuting\" : \"Muting\") + \" local stream...\");\n      if (muted) sfutest.unmuteAudio();else sfutest.muteAudio();\n      muted = sfutest.isAudioMuted(); // $(\"#mute\").html(muted ? \"Unmute\" : \"Mute\");\n    }\n\n    function unpublishOwnFeed() {\n      // Unpublish our stream\n      var unpublish = {\n        request: \"unpublish\"\n      };\n      sfutest.send({\n        message: unpublish\n      });\n    }\n  };\n\n  const bitrateDropDownObject = [{\n    event: \"0\",\n    detail: \"No Limit\"\n  }, {\n    event: \"128\",\n    detail: \"Cap to 128kbit\"\n  }, {\n    event: \"256\",\n    detail: \"Cap to 256kbit\"\n  }, {\n    event: \"512\",\n    detail: \"Cap to 512kbit\"\n  }, {\n    event: \"1024\",\n    detail: \"Cap to 1024kbit\"\n  }, {\n    event: \"1500\",\n    detail: \"Cap to 1500kbit\"\n  }, {\n    event: \"2000\",\n    detail: \"Cap to 2000kbit\"\n  }];\n\n  function start_screensharing() {\n    // var newstream;\n    // navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\n    // \t\t\t\t\t.then(function (stream) {\n    //             var [videoStream] = stream.getVideoTracks();\n    //             navigator.mediaDevices.getUserMedia({audio: true})\n    //             .then((audioStream)=> {\n    //              var  [audioTrack] = audioStream.getAudioTracks();\n    //               newstream =new MediaStream([videoStream, audioTrack] )\n    // var constraints = {video: {'mandatory': {'chromeMediaSource':'screen'}}};\n    // navigator.mediaDevices.getUserMedia(constraints)\n    //   .then(stream => newstream = stream)\n    // // ogcode  //\n    sfutest.createOffer({\n      media: {\n        video: \"screen\",\n        audioSend: true,\n        videoRecv: false,\n        videoSend: true,\n        replaceVideo: true\n      },\n      // Screen sharing Publishers are sendonly\n      // stream: newstream ,\n      success: function (jsep) {\n        console.log(\"Got publisher SDP!\", jsep);\n        var publish = {\n          request: \"configure\",\n          audio: true,\n          video: true\n        };\n        sfutest.send({\n          message: publish,\n          jsep: jsep\n        });\n      },\n      error: function (error) {\n        console.log(\"WebRTC error:\", error);\n        console.log(\"WebRTC error... \" + error.message);\n      }\n    }); //log code//\n    // })\n    // })\n  }\n\n  function stop_screensharing() {\n    sfutest.createOffer({\n      media: {\n        videoSend: true,\n        audioSend: true,\n        replaceVideo: true\n      },\n      // Screen sharing Publishers are sendonly\n      success: function (jsep) {\n        console.log(\"Got publisher SDP!\", jsep);\n        var publish = {\n          request: \"configure\",\n          audio: true,\n          video: true\n        };\n        sfutest.send({\n          message: publish,\n          jsep: jsep\n        });\n      },\n      error: function (error) {\n        console.log(\"WebRTC error:\", error);\n        console.log(\"WebRTC error... \" + error.message);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"join\",\n    children: [joinDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Or Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: onChangeName,\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Enter Room ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: onChangeRoomID,\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"roombtn\",\n        onClick: iD,\n        children: [\" \", \"Generate Room\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pubsub\",\n        onClick: start,\n        children: [\" \", \"Publisher\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pubsub\",\n        onClick: subscriberMode,\n        children: [\" \", \"Subscriber\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showColMd && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container hide\",\n        id: \"videos\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"row\",\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel panel-default\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel-heading\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"hideDiv\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-info\",\n                    onClick: () => start_screensharing(),\n                    children: \"Start Screen Share\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 895,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-warning\",\n                    onClick: () => stop_screensharing(),\n                    children: \"Stop Screen Share\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 901,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: \"pauserec\",\n                    onClick: () => pauserec(),\n                    children: [\"Pause Rec\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: \"playrec\",\n                    onClick: () => playrec(),\n                    children: [\" \", \"Play Rec\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 911,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                    children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n                      title: \"Bandwith\",\n                      id: \"dropdown-menu-align-right\",\n                      onSelect: handleSelect,\n                      children: bitrateDropDownObject.map((bit, i) => {\n                        return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                          eventKey: bit.event,\n                          children: bit.detail\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 924,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 917,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 916,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"panel-title\",\n                    children: [\"Local Video :\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label label-primary hide\",\n                      id: \"publisher\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 933,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 931,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"panel-body\",\n                id: \"videolocal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 17\n            }, this), remoteFeedPushedData.map((use, i) => {\n              console.log(\"ansh\");\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                id: `remoteDiv${use.id}`,\n                className: \"col-md-4\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"panel panel-default\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"panel-heading\",\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"panel-title\",\n                      children: [\"User Name : \", use.rfdisplay, /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"label label-info hide\",\n                        id: `remote${use.id}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 955,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 953,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 952,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"panel-body relative\",\n                    id: `videoremote${use.id}`,\n                    children: /*#__PURE__*/_jsxDEV(\"video\", {\n                      id: `remotevideo${use.rfindex}`,\n                      className: \"rounded\",\n                      width: \"270px\",\n                      height: \"330px\",\n                      autoPlay: true,\n                      playsInline: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 965,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 951,\n                  columnNumber: 23\n                }, this)\n              }, use.rfindex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 846,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"nRsaQSEG50C0yDwdzaSZ2TmCA6s=\");\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/terbo/janusroom/src/components/Create.tsx"],"names":["DropdownButton","Janus","axios","React","useState","Dropdown","server","window","location","hostname","janus","sfutest","opaqueId","randomString","myusername","myid","mystream","mypvtid","feeds","bitrateTimer","subscriber_mode","Create","myDate","Date","handleSelect","e","bitRate","name","setName","onChangeName","event","currentTarget","value","pushedData","remoteFeedPushedData","setremoteFeedPushedData","roomID","setRoomID","myroom","showColMd","setShowColMd","joinDiv","setjoinDiv","onChangeRoomID","parseInt","target","subscriberMode","start","iD","session","post","transaction","sessionID","data","id","handle","plugin","handleID","roomCreate","body","request","room","permanent","description","publishers","rec_dir","config","transacion","console","log","plugindata","error","alert","setInterval","keepAlive","session_id","textRoomCreate","playrec","send","message","record","pauserec","history","secret","bitrate","init","debug","callback","success","attach","pluginHandle","getPlugin","getId","getSessionId","register","ptype","display","consentDialog","on","mediaState","medium","webrtcState","onmessage","msg","jsep","undefined","element","document","getElementById","parentNode","removeChild","publishOwnFeed","list","f","audio","video","newRemoteFeed","warn","hangup","handleRemoteJsep","getAudioTracks","length","getVideoTracks","onlocalstream","stream","videoTag","createElement","className","height","width","autoplay","playsInline","style","borderRadius","muted","muteBtn","textContent","position","right","unpublishBtn","left","videolocal","appendChild","muteToggle","addEventListener","toggleMute","unpublishHandle","unpublishOwnFeed","attachMediaStream","webrtcStuff","pc","iceConnectionState","videoTracks","onremotestream","oncleanup","createButton","div","innerHTML","hide","publishBtn","listener","destroyed","useAudio","createOffer","media","audioRecv","videoRecv","audioSend","videoSend","publish","remoteFeed","subscribe","feed","private_id","videoCodec","i","rfindex","rfid","rfdisplay","createAnswer","iceState","state","indexOfData","findIndex","remote","push","$","remove","isAudioMuted","unmuteAudio","muteAudio","unpublish","bitrateDropDownObject","detail","start_screensharing","replaceVideo","stop_screensharing","map","bit","use"],"mappings":"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","sourcesContent":["import DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Janus from \"./Janus\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { Textroom } from \"./Textroom\";\nvar server: any = null;\n// if (window.location.protocol === \"http:\")\n// else server = \"https://\" + window.location.hostname + \":8089/janus\";\nserver = \"ws://\" + window.location.hostname + \":8188/janus\";\nvar janus: any = null;\nvar sfutest: any = null;\nvar opaqueId: any = \"videoroomtest-\" + Janus.randomString(12);\nvar myusername: any = null;\nvar myid: any = null;\nvar mystream: any = null;\nvar mypvtid: any = null;\nvar feeds: any = [];\nvar bitrateTimer: any = [];\nvar subscriber_mode = false;\n\nexport const Create = () => {\n  var myDate = new Date(1643009551493694 * 1000);\n  const handleSelect = (e: any) => {\n    bitRate(e);\n  };\n  //  const [sfuTestObject, setsfuTestObject]: any = useState<any[]>([]);\n  // console.log(sfuTestObject);\n  const [name, setName] = useState<string>(\"\");\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    return setName(event.currentTarget.value);\n  };\n  // const remoteFeedData : any[]   = [];\n  // const [remoteFeedData, setremoteFeedData] = useState<any[]>([]);\n\n  const pushedData: any[] = [];\n  const [remoteFeedPushedData, setremoteFeedPushedData] = useState<any[]>([]);\n  const [roomID, setRoomID] = useState<number>();\n  var myroom: any = roomID; // Demo room\n\n  const [showColMd, setShowColMd] = useState(false);\n\n  const [joinDiv, setjoinDiv] = useState(true);\n\n  const onChangeRoomID = (event: React.ChangeEvent<HTMLInputElement>) => {\n    return setRoomID(parseInt(event.target.value));\n  };\n  const subscriberMode = () => {\n    subscriber_mode = true;\n    start();\n  };\n\n  const iD = async () => {\n    // try {\n\n    const session = await axios.post(\"http://127.0.0.1:8088/janus\", {\n      janus: \"create\",\n      transaction: \"session\",\n    });\n    const sessionID = session.data.data.id;\n    const handle = await axios.post(\n      `http://127.0.0.1:8088/janus/${sessionID}`,\n      {\n        janus: \"attach\",\n        plugin: \"janus.plugin.videoroom\",\n        transaction: \"pluginAttach\",\n      }\n    );\n    const handleID = handle.data.data.id;\n    const roomCreate = await axios.post(\n      `http://127.0.0.1:8088/janus/${sessionID}/${handleID}`,\n      {\n        janus: \"message\",\n        transaction: \"roomCreate\",\n        body: {\n          request: \"create\",\n          room: roomID,\n          permanent: true,\n          description: \"Videoroom Application Room\",\n          publishers: 8,\n          rec_dir: \"/tmp\",\n        },\n      }\n    );\n\n    const config = await axios.post(\n      `http://127.0.0.1:8088/janus/${sessionID}/${handleID}`,\n      {\n        janus: \"message\",\n        transacion: \"config\",\n        body: {\n          request: \"c\",\n        },\n      }\n    );\n    console.log(roomCreate);\n    if (\n      roomCreate.data.plugindata.data.error === `Room ${roomID} already exists`\n    ) {\n      alert(\"Room Already Exists, Try Joining This Room instead\");\n    } else {\n      alert(\n        `Your Room is Created | Room Number : ${roomCreate.data.plugindata.data.room}`\n      );\n      myroom = roomCreate.data.plugindata.data.room;\n    }\n    setInterval(async () => {\n      const keepAlive = await axios.post(\n        `http://127.0.0.1:8088/janus/${sessionID}/${handleID}`,\n        {\n          janus: \"keepalive\",\n          session_id: sessionID,\n          transaction: \"keepingalive\",\n        }\n      );\n    }, 50000);\n    await textRoomCreate();\n  };\n\n  //   if($(this).text() === 'Pause') {\n  //   recordplay.send({message: {request: 'pause'}});\n  //   $(this).text('Resume');\n  //   }else {\n  //   recordplay.send({message: {request: 'resume'}});\n  //   $(this).text('Pause');\n\n  const playrec = () => {\n    sfutest.send({ message: { request: \"configure\" ,  record: true} });\n  };\n\n  const pauserec = () => {\n    sfutest.send({ message: {  request: \"configure\" , record: false } });\n  };\n\n  const textRoomCreate = async () => {\n    // try {\n\n    const session = await axios.post(\"http://127.0.0.1:8088/janus\", {\n      janus: \"create\",\n      transaction: \"session\",\n    });\n    const sessionID = session.data.data.id;\n    console.log(sessionID);\n    const handle = await axios.post(\n      `http://127.0.0.1:8088/janus/${sessionID}`,\n      {\n        janus: \"attach\",\n        plugin: \"janus.plugin.textroom\",\n        transaction: \"pluginAttach\",\n      }\n    );\n    const handleID = handle.data.data.id;\n    console.log(handleID);\n\n    const roomCreate = await axios.post(\n      `http://127.0.0.1:8088/janus/${sessionID}/${handleID}`,\n      {\n        janus: \"message\",\n        transaction: \"roomCreate\",\n        body: {\n          request: \"create\",\n          room: roomID,\n          history: 100,\n          permanent: true,\n          description: \"Textroom Application Room\",\n          secret: \"ansh\"\n        },\n      }\n    );\n\n    console.log(roomCreate);\n\n    setInterval(async () => {\n      const keepAlive = await axios.post(\n        `http://127.0.0.1:8088/janus/${sessionID}/${handleID}`,\n        {\n          janus: \"keepalive\",\n          session_id: sessionID,\n          transaction: \"keepingalive\",\n        }\n      );\n    }, 50000);\n  };\n  const bitRate = (e: any) => {\n    var id: any = parseInt(e);\n    console.log(id);\n    var bitrate = parseInt(id) * 1000;\n    console.log(bitrate);\n    if (bitrate === 0) {\n      console.log(\"Not limiting bandwidth via REMB\");\n    } else {\n      console.log(\"Capping bandwidth to \" + bitrate + \" via REMB\");\n    }\n\n    sfutest.send({\n      message: { request: \"configure\", bitrate: bitrate },\n    });\n\n    return false;\n  };\n\n  const start = () => {\n    setShowColMd(true);\n    setjoinDiv(false);\n\n    Janus.init({\n      debug: \"all\",\n      callback: function () {\n        // Make sure the browser supports WebRTC\n        // Create session\n        janus = new Janus({\n          server: server,\n          success: function () {\n            // Attach to VideoRoom plugin\n            janus.attach({\n              plugin: \"janus.plugin.videoroom\",\n              opaqueId: opaqueId,\n              success: function (pluginHandle: any) {\n                sfutest = pluginHandle;\n                console.log(\n                  \"Plugin attached! (\" +\n                    sfutest.getPlugin() +\n                    \", id=\" +\n                    sfutest.getId() +\n                    \")\"\n                );\n                console.log(sfutest.session.getSessionId());\n\n                console.log(\"  -- This is a publisher/m a n a g e r \");\n\n                myusername = name;\n\n                const register = {\n                  request: \"join\",\n                  room: myroom,\n                  ptype: \"publisher\",\n                  display: name,\n                  record: false,\n                };\n                console.log(myusername);\n\n                sfutest.send({ message: register });\n              },\n              error: function (error: any) {\n                console.error(\"  -- Error attaching plugin...\", error);\n              },\n              consentDialog: function (on: any) {\n                console.debug(\n                  \"Consent dialog should be \" + (on ? \"on\" : \"off\") + \" now\"\n                );\n              },\n              mediaState: function (medium: any, on: any) {\n                console.log(\n                  \"Janus \" +\n                    (on ? \"started\" : \"stopped\") +\n                    \" receiving our \" +\n                    medium\n                );\n              },\n              webrtcState: function (on: any) {\n                console.log(\n                  \"Janus says our WebRTC PeerConnection is \" +\n                    (on ? \"up\" : \"down\") +\n                    \" now\"\n                );\n                if (!on) return;\n                // setsfuTestObject(sfutest);\n              },\n\n              onmessage: function (msg: any, jsep: any) {\n                console.debug(\" ::: Got a message (publisher) :::\");\n                let event = msg[\"videoroom\"];\n                console.log(msg);\n                console.debug(\"Event: \" + event);\n                if (event != undefined && event != null) {\n                  if (event === \"joined\") {\n                    // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n                    myid = msg[\"id\"];\n                    mypvtid = msg[\"private_id\"];\n                    console.log(\n                      \"Successfully joined room \" +\n                        msg[\"room\"] +\n                        \" with ID \" +\n                        myid\n                    );\n                    if (subscriber_mode) {\n                      const element: HTMLElement =\n                        document.getElementById(\"hideDiv\")!;\n                      element?.parentNode?.removeChild(element);\n                      // $(\"#videos\").removeClass(\"hide\").show();\n                    } else {\n                      publishOwnFeed(true);\n                    }\n\n                    if (\n                      msg[\"publishers\"] !== undefined &&\n                      msg[\"publishers\"] !== null\n                    ) {\n                      let list = msg[\"publishers\"];\n                      console.log(\"Got a list of available publishers/feeds:\");\n                      console.log(list);\n                      for (let f in list) {\n                        let id = list[f][\"id\"];\n                        let display = list[f][\"display\"];\n                        let audio = list[f][\"audio_codec\"];\n                        let video = list[f][\"video_codec\"];\n                        console.log(\n                          \"  >> [\" +\n                            id +\n                            \"] \" +\n                            display +\n                            \" (audio: \" +\n                            audio +\n                            \", video: \" +\n                            video +\n                            \")\"\n                        );\n                        newRemoteFeed(id, display, audio, video);\n                      }\n                    }\n                  } else if (event === \"destroyed\") {\n                    // The room has been destroyed\n                    console.warn(\"The room has been destroyed!\");\n                    console.error(\"The room has been destroyed\");\n                  } else if (event === \"event\") {\n                    // Any new feed to attach to?\n                    if (\n                      msg[\"publishers\"] !== undefined &&\n                      msg[\"publishers\"] !== null\n                    ) {\n                      console.log(\"new publishers!\");\n                      let list = msg[\"publishers\"];\n                      console.log(msg);\n                      for (let f in list) {\n                        let id = list[f][\"id\"];\n                        let display = list[f][\"display\"];\n                        let audio = list[f][\"audio_codec\"];\n                        let video = list[f][\"video_codec\"];\n                        console.log(\n                          \"  >> [\" +\n                            id +\n                            \"] \" +\n                            display +\n                            \" (audio: \" +\n                            audio +\n                            \", video: \" +\n                            video +\n                            \")\"\n                        );\n                        newRemoteFeed(id, display, audio, video);\n                      }\n                    } else if (\n                      msg[\"leaving\"] !== undefined &&\n                      msg[\"leaving\"] !== null\n                    ) {\n                      // One of the publishers has gone away?\n                    } else if (\n                      msg[\"unpublished\"] !== undefined &&\n                      msg[\"unpublished\"] !== null\n                    ) {\n                      // One of the publishers has unpublished?\n                      if (msg[\"unpublished\"] === \"ok\") {\n                        sfutest.hangup();\n                        return;\n                      }\n                    } else if (\n                      msg[\"error\"] !== undefined &&\n                      msg[\"error\"] !== null\n                    ) {\n                      if (msg[\"error_code\"] === 426) {\n                        // This is a \"no such room\" error: give a more meaningful description\n                      } else {\n                        console.log(\"No Such Room\");\n                      }\n                    }\n                  }\n                }\n\n                if (jsep !== undefined && jsep !== null) {\n                  console.debug(\"Got room event. Handling SDP as well...\");\n                  console.debug(jsep);\n                  sfutest.handleRemoteJsep({ jsep: jsep });\n                  // Check if any of the media we wanted to publish has\n                  // been rejected (e.g., wrong or unsupported codec)\n                  let audio = msg[\"audio_codec\"];\n                  if (\n                    mystream &&\n                    mystream.getAudioTracks() &&\n                    mystream.getAudioTracks().length > 0 &&\n                    !audio\n                  ) {\n                    // Audio has been rejected\n                    alert(\n                      \"Our audio stream has been rejected, viewers won't hear us\"\n                    );\n                  }\n                  let video = msg[\"video_codec\"];\n                  if (\n                    mystream &&\n                    mystream.getVideoTracks() &&\n                    mystream.getVideoTracks().length > 0 &&\n                    !video\n                  ) {\n                    // Video has been rejected\n                    console.log(\n                      \"Our video stream has been rejected, viewers won't see us\"\n                    );\n                  }\n                }\n              },\n\n              onlocalstream: function (stream: any) {\n                console.log(\" ::: Got a local stream :::\", stream);\n                mystream = stream;\n\n                // $(\"#videos\").removeClass(\"hide\").show();\n\n                const videoTag = document.createElement(\"video\");\n                videoTag.className = \"rounded centered\";\n                videoTag.id = \"myvideo\";\n                videoTag.height = 330;\n                videoTag.width = 270;\n                videoTag.autoplay = true;\n                videoTag.playsInline = true;\n                videoTag.style.borderRadius = \"5px\";\n                videoTag.muted = true;\n\n                const muteBtn = document.createElement(\"button\");\n                muteBtn.className = \"btn btn-warning btn-xs\";\n                muteBtn.id = \"mute\";\n                muteBtn.textContent = \"Mute\";\n                muteBtn.style.position = \"relative\";\n                muteBtn.style.right = \"10px\";\n\n                const unpublishBtn = document.createElement(\"button\");\n                unpublishBtn.className = \"btn btn-warning btn-xs\";\n                unpublishBtn.id = \"unpublish\";\n                unpublishBtn.textContent = \"Unpublish\";\n                unpublishBtn.style.position = \"relative\";\n                unpublishBtn.style.left = \"100px\";\n\n                // if ($(\"#myvideo\").length === 0) {\n                //   //\n                  var videolocal = document.getElementById(\"videolocal\")!;\n\n                  videolocal.appendChild(videoTag);\n\n                  videolocal.appendChild(muteBtn);\n                  videolocal.appendChild(unpublishBtn);\n                  var muteToggle: any = document.getElementById(\"mute\");\n\n                  muteToggle?.addEventListener(\"click\", toggleMute);\n                  var unpublishHandle: any =\n                    document.getElementById(\"unpublish\");\n\n                  unpublishHandle?.addEventListener(\"click\", unpublishOwnFeed);\n                // }\n                // $(\"#publisher\").removeClass(\"hide\").html(myusername).show();\n                Janus.attachMediaStream(videoTag, stream);\n                if (\n                  sfutest.webrtcStuff.pc.iceConnectionState !== \"completed\" &&\n                  sfutest.webrtcStuff.pc.iceConnectionState !== \"connected\"\n                )\n                  var videoTracks = stream.getVideoTracks();\n              },\n              onremotestream: function (stream: any) {\n                // The publisher stream is sendonly, we don't expect anything here\n              },\n              oncleanup: function () {\n                console.log(\n                  \" ::: Got a cleanup notification: we are unpublished now :::\"\n                );\n                mystream = null;\n                function createButton() {\n                  var div: HTMLElement = document.getElementById(\"videolocal\")!;\n                  div.innerHTML =\n                    '<button id=\"publish\" class=\"btn btn-primary\">Publish</button>';\n                }\n                createButton();\n\n                const hide = () => {\n                  const publishBtn = document.getElementById(\"publish\")!;\n                  publishBtn.style.display = \"none\";\n                };\n                var element: any = document.getElementById(\"publish\");\n                var listener = element.addEventListener(\"click\", function () {\n                  publishOwnFeed(true);\n                  hide();\n                });\n              },\n            });\n          },\n          error: function (error: any) {\n            console.error(error);\n          },\n          destroyed: function () {\n            console.log(\"destroyed\");\n          },\n        });\n      },\n    });\n\n\n    function publishOwnFeed(useAudio: any) {\n      // Publish our stream\n        sfutest.createOffer({\n          media: {\n            audioRecv: false,\n            videoRecv: false,\n            audioSend: useAudio,\n            videoSend: true,\n          }, // Publishers are sendonly\n          success: function (jsep: any) {\n            console.debug(\"Got publisher SDP!\");\n            console.debug(jsep);\n            const publish = {\n              request: \"configure\",\n              audio: useAudio,\n              video: true,\n              record: false,\n            };\n            sfutest.send({ message: publish, jsep: jsep });\n          },\n          error: function (error: any) {\n            console.error(\"WebRTC error:\", error);\n            if (useAudio) {\n              publishOwnFeed(false);\n            }\n          },\n        });\n     \n    }\n\n    function newRemoteFeed(id: any, display: any, audio: any, video: any) {\n      // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n      let remoteFeed: any = null;\n\n      console.log(\"hexx\");\n      janus.attach({\n        plugin: \"janus.plugin.videoroom\",\n        opaqueId: opaqueId,\n        success: function (pluginHandle: any) {\n          remoteFeed = pluginHandle;\n\n          console.log(pluginHandle.plugin);\n          console.log(\n            \"Plugin attached! (\" +\n              remoteFeed.getPlugin() +\n              \", id=\" +\n              remoteFeed.getId() +\n              \")\"\n          );\n          console.log(\"  -- This is a subscriber\");\n          // We wait for the plugin to send us an offer\n          let subscribe = {\n            request: \"join\",\n            room: myroom,\n            ptype: \"subscriber\",\n            feed: id,\n            private_id: mypvtid,\n          };\n          remoteFeed.videoCodec = video;\n          remoteFeed.send({ message: subscribe });\n          console.log(subscribe);\n        },\n        error: function (error: any) {\n          console.error(\"  -- Error attaching plugin...\", error);\n        },\n        onmessage: function (msg: any, jsep: any) {\n          console.debug(\" ::: Got a message (subscriber) :::\", msg);\n          let event = msg[\"videoroom\"];\n\n          console.log(msg);\n          console.log(jsep);\n          console.log(\"Event: \" + event);\n          if (event) {\n            if (event === \"attached\") {\n              console.log(`subscriber created and attached!`);\n              // Subscriber created and attached\n              for (let i = 1; i < 6; i++) {\n                if (!feeds[i]) {\n                  feeds[i] = remoteFeed;\n                  remoteFeed.rfindex = i;\n                  break;\n                }\n              }\n              remoteFeed.rfid = msg[\"id\"];\n              remoteFeed.rfdisplay = msg[\"display\"];\n              console.log(`attached`, remoteFeed);\n              console.log(\n                \"Successfully attached to feed \" +\n                  remoteFeed.rfid +\n                  \" (\" +\n                  remoteFeed.rfdisplay +\n                  \") in room \" +\n                  msg[\"room\"]\n              );\n              // $(\"#remote\" + remoteFeed.rfindex).removeClass(\"hide\").htmlshow();\n            } else if (event === \"recording\") {\n              // Got an ANSWER to our recording OFFER\n              // if(jsep)\n              // recordplay.handleRemoteJsep({ jsep: jsep });\n              // var id = result[\"id\"];\n              // if(id) {\n              //   Janus.log(\"The ID of the current recording is \" + id);\n              //   // recordingId = id;\n              // }\n              console.log(\"record\");\n            }\n          }\n          if (jsep) {\n            console.debug(\"Handling SDP as well...\", jsep);\n            // Answer and attach\n            remoteFeed.createAnswer({\n              jsep: jsep,\n              media: { audioSend: false, videoSend: false }, // We want recvonly audio/video\n              success: function (jsep: any) {\n                console.log(\"Got SDP!\", jsep);\n                let body = { request: \"start\", room: myroom };\n                remoteFeed.send({ message: body, jsep: jsep });\n              },\n              error: function (error: any) {\n                console.error(\"WebRTC error:\", error);\n              },\n            });\n          }\n        },\n        iceState: function (state: any) {\n          console.log(\n            \"ICE state of this WebRTC PeerConnection (feed #\" +\n              remoteFeed.rfindex +\n              \") changed to \" +\n              state\n          );\n        },\n        webrtcState: function (on: any) {\n          console.log(\n            \"Janus says this WebRTC PeerConnection (feed #\" +\n              remoteFeed.rfindex +\n              \") is \" +\n              (on ? \"up\" : \"down\") +\n              \" now\"\n          );\n        },\n        onlocalstream: function (stream: any) {\n          // The subscriber stream is recvonly, we don't expect anything here\n        },\n        onremotestream: function (stream: any) {\n          console.log(remoteFeed);\n\n          // const a = $(\"#remotevideo\" + remoteFeed.rfindex).length;\n          // var addButtons = false;\n          // if ($(\"#remotevideo\" + remoteFeed.rfindex).length === 0) {\n          //   //   addButtons = true;\n          //   $(\"#videoremote\" + remoteFeed.id).append(\n          //     '<span class=\"label label-primary hide\" id=\"curres' +\n          //       remoteFeed.id +\n          //       '\" style=\"position: absolute; bottom: 0px; left: 0px; margin: 15px;\"></span>' +\n          //       '  <span class=\"label label-info hide\" id=\"curbitrate' +\n          //       remoteFeed.id +\n          //       '\" style=\"position: absolute; bottom: 0px; right: 0px; margin: 15px;\"></span>'\n          //   );\n          //   $(\"#curbitrate\" + remoteFeed.id)\n          //     .removeClass(\"hide\")\n          //     .show();\n          //   bitrateTimer[remoteFeed.id] = setInterval(function () {\n          //     var bitrate = remoteFeed.getBitrate();\n          //     $(\"#curbitrate\" + remoteFeed.id).text(bitrate);\n          //   }, 1000);\n\n          //   // const indexOfData: any = pushedData.findIndex((remote) => {\n          //   //   return remote.id == remoteFeed.id;\n          //   // });\n\n          //   // if (indexOfData < 0) {\n          //   //   pushedData.push(remoteFeed);\n          //   //   setremoteFeedPushedData(pushedData);\n          //   // }\n\n          //   // console.log(typeof remoteFeed);\n\n          //   // console.log(pushedData);\n          //   // console.log();\n\n          //   // setremoteFeedData([...remoteFeedData, remoteFeed]);\n\n          //   // No remote video yet\n          //   // $(\"#videoremote\" + remoteFeed.rfindex).append(\n          //   //   '<video class=\"rounded centered relative hide\" id=\"remotevideo' +\n          //   //     remoteFeed.rfindex +\n          //   //     '\" width=\"100%\" height=\"100%\" autoplay playsinline/>'\n          //   // );\n          // }\n\n          const indexOfData: any = pushedData.findIndex((remote) => {\n            return remote.id == remoteFeed.id;\n          });\n\n          if (indexOfData < 0) {\n            pushedData.push(remoteFeed);\n            setremoteFeedPushedData(pushedData);\n          }\n\n          // console.log(typeof remoteFeed);\n\n          // console.log(pushedData);\n          // console.log();\n          const video: HTMLElement = document.getElementById(\n            `remotevideo${remoteFeed.rfindex}`\n          )!;\n          Janus.attachMediaStream(video, stream);\n          var videoTracks = stream.getVideoTracks();\n          // $(\"#videoremote\" + remoteFeed.id).append(\n          //   '<span class=\"label label-primary hide\" id=\"curres' +\n          //     remoteFeed.id +\n          //     '\" style=\"position: absolute; bottom: 0px; left: 0px; margin: 15px;\"></span>' +\n          //     '  <span class=\"label label-info hide\" id=\"curbitrate' +\n          //     remoteFeed.id +\n          //     '\" style=\"position: absolute; bottom: 0px; right: 0px; margin: 15px;\"></span>'\n          // );\n          // $(\"#curbitrate\" + remoteFeed.id)\n          //   .removeClass(\"hide\")\n          //   .show();\n          // bitrateTimer[remoteFeed.id] = setInterval(function () {\n          //   var bitrate = remoteFeed.getBitrate();\n          //   $(\"#curbitrate\" + remoteFeed.id).text(bitrate);\n          // }, 1000);\n\n          console.log(remoteFeed);\n          console.log(\"Remote feed #\" + remoteFeed.id + \", stream:\", stream);\n          console.log(remoteFeed.display);\n        },\n        oncleanup: function () {\n          console.log(\n            \" ::: Got a cleanup notification (remote feed \" + id + \") :::\"\n          );\n\n          $(\"#remoteDiv\" + remoteFeed.rfindex).remove();\n        },\n      });\n    }\n    function toggleMute() {\n      var muted = sfutest.isAudioMuted();\n      console.log(muted);\n      console.log((muted ? \"Unmuting\" : \"Muting\") + \" local stream...\");\n      if (muted) sfutest.unmuteAudio();\n      else sfutest.muteAudio();\n      muted = sfutest.isAudioMuted();\n      // $(\"#mute\").html(muted ? \"Unmute\" : \"Mute\");\n    }\n\n    function unpublishOwnFeed() {\n      // Unpublish our stream\n      var unpublish = { request: \"unpublish\" };\n      sfutest.send({ message: unpublish });\n    }\n  };\n  const bitrateDropDownObject = [\n    {\n      event: \"0\",\n      detail: \"No Limit\",\n    },\n    {\n      event: \"128\",\n      detail: \"Cap to 128kbit\",\n    },\n    {\n      event: \"256\",\n      detail: \"Cap to 256kbit\",\n    },\n    {\n      event: \"512\",\n      detail: \"Cap to 512kbit\",\n    },\n    {\n      event: \"1024\",\n      detail: \"Cap to 1024kbit\",\n    },\n    {\n      event: \"1500\",\n      detail: \"Cap to 1500kbit\",\n    },\n    {\n      event: \"2000\",\n      detail: \"Cap to 2000kbit\",\n    },\n  ];\n\n  function start_screensharing() {\n    // var newstream;\n    // navigator.mediaDevices.getDisplayMedia({ video: true, audio: true })\n    // \t\t\t\t\t.then(function (stream) {\n    //             var [videoStream] = stream.getVideoTracks();\n    //             navigator.mediaDevices.getUserMedia({audio: true})\n    //             .then((audioStream)=> {\n    //              var  [audioTrack] = audioStream.getAudioTracks();\n    //               newstream =new MediaStream([videoStream, audioTrack] )\n    // var constraints = {video: {'mandatory': {'chromeMediaSource':'screen'}}};\n\n    // navigator.mediaDevices.getUserMedia(constraints)\n    //   .then(stream => newstream = stream)\n\n    // // ogcode  //\n    sfutest.createOffer({\n      media: {\n        video: \"screen\",\n        audioSend: true,\n        videoRecv: false,\n        videoSend: true,\n        replaceVideo: true,\n      }, // Screen sharing Publishers are sendonly\n      // stream: newstream ,\n      success: function (jsep: any) {\n        console.log(\"Got publisher SDP!\", jsep);\n        var publish = { request: \"configure\", audio: true, video: true };\n        sfutest.send({ message: publish, jsep: jsep });\n      },\n      error: function (error: any) {\n        console.log(\"WebRTC error:\", error);\n        console.log(\"WebRTC error... \" + error.message);\n      },\n    });\n\n    //log code//\n\n    // })\n    // })\n  }\n  function stop_screensharing() {\n    sfutest.createOffer({\n      media: { videoSend: true, audioSend: true, replaceVideo: true }, // Screen sharing Publishers are sendonly\n      success: function (jsep: any) {\n        console.log(\"Got publisher SDP!\", jsep);\n        var publish = { request: \"configure\", audio: true, video: true };\n        sfutest.send({ message: publish, jsep: jsep });\n      },\n      error: function (error: any) {\n        console.log(\"WebRTC error:\", error);\n        console.log(\"WebRTC error... \" + error.message);\n      },\n    });\n  }\n\n  return (\n    <div className=\"join\">\n      {joinDiv && (\n        <div className=\"join-container\">\n          <h2>Create Or Join Room</h2>\n\n          <form>\n            <table>\n              <tr>\n                <td>\n                  <label>Enter Username</label>\n                </td>\n                <td>\n                  <input onChange={onChangeName} type=\"text\"></input>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label>Enter Room ID</label>\n                </td>\n                <td>\n                  <input onChange={onChangeRoomID} type=\"number\"></input>\n                </td>\n              </tr>\n            </table>\n          </form>\n          <button className=\"roombtn\" onClick={iD}>\n            {\" \"}\n            Generate Room\n          </button>\n          <button className=\"pubsub\" onClick={start}>\n            {\" \"}\n            Publisher\n          </button>\n          <button className=\"pubsub\" onClick={subscriberMode}>\n            {\" \"}\n            Subscriber\n          </button>\n        </div>\n      )}\n\n      <div>\n        {showColMd && (\n          <div className=\"container hide\" id=\"videos\">\n            {/* <Textroom name={name} roomIDS={roomID} /> */}\n            <div id=\"row\" className=\"row\">\n              <div className=\"col-md-4\">\n                <div className=\"panel panel-default\">\n                  <div className=\"panel-heading\">\n                    <div id=\"hideDiv\">\n                      <button\n                        className=\"btn btn-info\"\n                        onClick={() => start_screensharing()}\n                      >\n                        Start Screen Share\n                      </button>\n                      <button\n                        className=\"btn btn-warning\"\n                        onClick={() => stop_screensharing()}\n                      >\n                        Stop Screen Share\n                      </button>\n\n                      <button id=\"pauserec\" onClick={() => pauserec()}>\n                        Pause Rec{\" \"}\n                      </button>\n                      <button id=\"playrec\" onClick={() => playrec()}>\n                        {\" \"}\n                        Play Rec\n                      </button>\n\n                      <Dropdown>\n                        <DropdownButton\n                          title=\"Bandwith\"\n                          id=\"dropdown-menu-align-right\"\n                          onSelect={handleSelect}\n                        >\n                          {bitrateDropDownObject.map((bit, i) => {\n                            return (\n                              <Dropdown.Item key={i} eventKey={bit.event}>\n                                {bit.detail}\n                              </Dropdown.Item>\n                            );\n                          })}\n                        </DropdownButton>\n                      </Dropdown>\n                      <h3 className=\"panel-title\">\n                        Local Video :{\" \"}\n                        <span\n                          className=\"label label-primary hide\"\n                          id=\"publisher\"\n                        />\n                      </h3>\n                    </div>\n                  </div>\n\n                  <div className=\"panel-body\" id=\"videolocal\" />\n                </div>\n                {remoteFeedPushedData.map((use: any, i) => {\n                  console.log(\"ansh\");\n                  return (\n                    <div\n                      key={use.rfindex}\n                      id={`remoteDiv${use.id}`}\n                      className=\"col-md-4\"\n                    >\n                      <div className=\"panel panel-default\">\n                        <div className=\"panel-heading\">\n                          <h3 className=\"panel-title\">\n                            User Name : {use.rfdisplay}\n                            <span\n                              className=\"label label-info hide\"\n                              id={`remote${use.id}`}\n                            ></span>\n                          </h3>\n                        </div>\n                        <div\n                          className=\"panel-body relative\"\n                          id={`videoremote${use.id}`}\n                        >\n                          <video\n                            id={`remotevideo${use.rfindex}`}\n                            className=\"rounded\"\n                            width=\"270px\"\n                            height=\"330px\"\n                            autoPlay\n                            playsInline\n                          ></video>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}